
### LUKS PERSISTENCE ###   
##   for debian live  ##   



# WORK IN PROGRESS ... CHANGING until perfected


# BASIC LOW DOWN IS:
# 1 format the partition,   
# 2 encrypt it with luks, 
# 3 open it with luks,
# 4 make the filesystem,
# 5 mount it from /dev/mapper/* , 
# 6 populate the filesystem with a "persistence.conf" file, 
# 7 un mount it, 
# 8 close it with luks

# DEFINE SOME VARIABLES
devicel="/dev/sdb"    # CHOOSE A DEVICE
usb_size="4gb"        # TELL PARTED ITS SIZE

# CHOOSE A MIRROR
mirror="http://ftp.debian.org/debian/"
security_mirror="http://ftp.debian.org/debian-security/"



# MAKE THE IMAGE
# remember sid doesnt always build easily.
# LOOK TO:  http://live.debian.net/manual/3.x/html/live-manual.en.html--/
# FOR ANSWERS ON GETTING YOUR BUILD WORKING CORRECTLY  <---------------/      


sudo apt-get install live-build live-config live-config-doc \
                                                 cryptsetup --force-yes

mkdir -p ~/crypto_buildl

cd ~/crypto_buildl

lb config \
-a amd64 \
-b hdd \
-d sid \
--linux-flavours amd64 \
--bootstrap cdebootstrap \
--cdebootstrap-options "--flavour=minimal" \
--bootappend-live "\
boot=live \
config \
persistent=cryptsetup \
persistence-encryption=luks \
username=joe \
hostname=shmoe \
persistence" \
--apt-indices false \
--apt-recommends false \
--linux-packages linux-image-3.7-trunk \
--mirror-bootstrap "${mirror}" \
--mirror-binary "${mirror}" \
--mirror-chroot-security "${security_mirror}" \
--mirror-binary-security "${security_mirror}" 


# THIS ADDS SOME USUAL DEPENDENCIES + CRYPTSETUP
printf "\
user-setup 
sudo 
cryptsetup 
apt-utils 
" > config/package-lists/package.list.chroot


# PIN SOME PACKAGES TO WHEEZY
cat >> config/archives/sid.pref.chroot << EOF
# USER-SETUP
Package: user-setup
Pin: release n=wheezy
Pin-Priority: 600

# SYSLINU*
Package: syslinu*
Pin: release n=wheezy
Pin-Priority: 600

Package: *
Pin: release n=experimental
Pin-Priority: 1

EOF


# ADD WHEEZY REPOS FOR ABOVE PIN LIST
echo "deb "${mirror}" wheezy main" > \
                                  config/archives/wheezy.list.chroot 

# ADD EXPERIMENTAL REPOS FOR ABOVE PIN LIST	
echo "deb "${mirror}" experimental main" > \
                            config/archives/experimental.list.chroot 

# BUILD THE IMAGE
sudo lb build   


# CHECK FOR BAD BLOCKS ON THE DEVICE
sudo badblocks -c 10240 -s -w -t random -v "${devicel}"

# OVERWRITE THE DEVICE WITH RANDOM DATA
sudo dd if=/dev/urandom of="${devicel}"


# DD THE binary.img to a usb
sudo dd if=binary.img of="${devicel}"   

# MAKE THE PARTITION, 
read bytes _ < <(du -bcm binary.img |tail -1); echo $bytes 

sudo parted "${devicel}" mkpart primary "${bytes}" "${usb_size}"  

# ENCRYPT THE PARTITION
sudo cryptsetup --verbose --verify-passphrase luksFormat "${devicel}2"

# OPEN THE ENCRYPTED PARTITION
sudo cryptsetup luksOpen "${devicel}2" my_usb 

# MAKE A FILESYSTEM ON IT AND LABEL IT "persistence"
sudo mkfs.ext3 -L persistence /dev/mapper/my_usb

# MAKE A MOUNT POINT
sudo mkdir -p /mnt/my_usb

# MOUNT THE OPENED ENCYRYPTION PARTITION
sudo mount /dev/mapper/my_usb /mnt/my_usb/

# MAKE THE PERSISTENCE.CONF FILE
echo "/ union" > ~/persistence.conf && sudo mv ~/persistence.conf \
                      /persistence.conf && sudo mv /persistence.conf /mnt/my_usb

# UMOUNT IT
sudo umount /dev/mapper/my_usb

# CLOSE THE LUKS PARTITION
sudo cryptsetup luksClose /dev/mapper/my_usb

# TEST IT 
sudo apt-get install qemu --force-yes

sudo kvm "${devicel}" 


